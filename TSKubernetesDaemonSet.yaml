# Copyright (c) 2018-2022 F5, Inc.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
######
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: threatstack-agent
rules:
- apiGroups:
  - ""
  resources:
  - events
  - namespaces
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - "rbac.authorization.k8s.io"
  resources:
  - clusterroles
  - clusterrolebindings
  - roles
  - rolebindings
  verbs:
  - get
  - list
  - watch
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: threatstack-agent
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: threatstack-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: threatstack-agent
subjects:
- kind: ServiceAccount
  name: threatstack-agent
  namespace: default
---
# Deploys a single agent. Collects events from the Kubernetes API
apiVersion: apps/v1
kind: Deployment
metadata:
  name: threatstack-agent-kubernetes-api
spec:
  replicas: 1
  selector:
    matchLabels:
      name: "threatstack-agent-kubernetes-api"
  template:
    metadata:
      labels:
        name: "threatstack-agent-kubernetes-api"
      name: threatstack-agent-kubernetes-api
    spec:
      hostNetwork: true
      hostPID: true
      serviceAccountName: threatstack-agent
      containers:
      - image: threatstack/ts-docker2:3.0.0
        imagePullPolicy: Always
        name: threatstack-agent
        livenessProbe:
          exec:
            command: [ "sh", "-c", "tsagent status" ]
          initialDelaySeconds: 15
          periodSeconds: 360
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        env:
          - name: THREATSTACK_SETUP_ARGS
            value: "--deploy-key <REPLACE_WITH_VALID_DEPLOY_KEY> --ruleset 'Base Rule Set, Docker Rule Set, Kubernetes Rule Set'"
          - name: THREATSTACK_CONFIG_ARGS
            value: "enable_kubes 1 enable_kubes_master 1 enable_bpf_sensors false log.level info"
        securityContext:
          privileged: false
          capabilities:
            add: ["AUDIT_CONTROL", "SYS_ADMIN", "SYS_PTRACE", "SYS_NICE"]
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
---
# Deploys our agent to all nodes in the cluster. Collects all events except for Kubernetes events. Audit, file, login, etc.
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: threatstack-agent
spec:
  selector:
    matchLabels:
      name: "threatstack-agent"
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/threatstack-agent: unconfined
      labels:
        name: "threatstack-agent"
      name: threatstack-agent
    spec:
      hostNetwork: true
      hostPID: true
      containers:
      - image: threatstack/ts-docker2:3.0.0
        imagePullPolicy: Always
        name: threatstack-agent
        livenessProbe:
          exec:
            command: [ "sh", "-c", "tsagent status" ]
          initialDelaySeconds: 15
          periodSeconds: 360
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        env:
          - name: THREATSTACK_SETUP_ARGS
            value: "--deploy-key <REPLACE_WITH_VALID_DEPLOY_KEY> --ruleset 'Base Rule Set, Docker Rule Set, Kubernetes Rule Set'"
          - name: THREATSTACK_CONFIG_ARGS
            value: "enable_kubes 1 enable_bpf_sensors false log.level info"
        securityContext:
          privileged: false
          capabilities:
            add: ["AUDIT_CONTROL", "SYS_ADMIN", "SYS_PTRACE", "SYS_NICE", "SYS_RESOURCE", "IPC_LOCK"]
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
        volumeMounts:
          - name: hostfs
            mountPath: /threatstackfs
            mountPropagation: HostToContainer
            readOnly: true
          - name: kernel-debug
            mountPath: /sys/kernel/debug
      volumes:
        - hostPath:
            path: /
          name: hostfs
        - hostPath:
            path: /sys/kernel/debug
          name: kernel-debug
